
#!/bin/bash

IFS=$'\n'  #Make newlines the only separator.

function f_services4report() {


for file in $(find -name "*gnmap"); do

	if [ "$(cat $file | grep -P '\w*/open/\w*' |awk '{print $2}')" != "" ]

	then

        	echo "Parsing \"$file\"..."

	fi


	for ip in $(cat $file | grep -P '\w*/open/\w*' |awk '{print $2}');do


	        if [ "$(cat $file |grep $ip | grep -oP '\w*/open/\w*' |cut -d/ -f1)" != "" ]

        	then

                	r_NoOpenPorts="false"  # Checking If there's at least one file with open ports.

		fi

        	number_of_ips=$(cat $file | grep -P '\w*/open/\w*' |awk '{print $2}' |wc -l)

        	counter=1

        	for port in $(cat $file |grep $ip | grep -oP '\w*/open/\w*' |cut -d/ -f1);do


                	PROTOCOL=$(cat $file |grep $ip | grep -oP '\w*/open/\w*'|head -n $counter |tail -n 1|cut -d/ -f3)

                	SERVICES=$(cat $file |grep $ip | grep -o 'open/[^ ]*' |awk -F '//|//' '{print $2}' |head -n $counter |tail -n 1)

			IPs=$(cat $file | grep " $port/open/" |awk '{print $2}')

                	echo -e "\"$IPs\",$port,$PROTOCOL,$SERVICES!"  >> report_table_temp

                	counter=$[$counter+1]

        	done

	done
done

# Sorting:

r_counter=1

for r_port in $(cat report_table_temp |tr "\n" "+" |tr "!" "\n" |tr "," "\t" | sort -n -k2 -u |awk '{print $2}' |grep -v -e '^$');do

	r_ips=$(cat report_table_temp |tr "\n" "+" |tr "!" "\n" |tr "," "\t" | sort -n -k2 | awk '!a[$1,$2,$3]++' |grep $'\t'$r_port$'\t' |awk '{print $1}' |tr "+" "\n" |grep -v -e '^$' |sed 's:"::g' ||head -n $r_counter |tail -n 1)

	r_protocol=$(cat report_table_temp |tr "\n" "+" |tr "!" "\n" |tr "," "\t" | sort -n -k2 -u |awk '{print $3}' |grep -v -e '^$' |head -n $r_counter |tail -n 1)

	r_services=$(cat report_table_temp |tr "\n" "+" |tr "!" "\n" |tr "," "\t" | sort -n -k2 -u |awk '{print $4}' |grep -v -e '^$' |head -n $r_counter |tail -n 1)

	echo -e "\"$r_ips\",$r_port,$r_protocol,$r_services"  >> report_table.csv

	r_counter=$[$r_counter+1]

done

[ -f report_table_temp ] && rm report_table_temp

if [ -s report_table.csv ]

then

	echo "**********************************************"
	echo "report_table.csv created."
	echo "**********************************************"

else

	[ -f report_table.csv ] && rm report_table.csv

fi

if [ "$r_NoOpenPorts" != "false" ]

then

	echo "No open ports."

fi

}

function f_banners {

echo "Grabbing banners..."

for line in $(cat services);do

        ip=$(echo "$line" |awk '{print $1}')
        port=$(echo "$line" |awk '{print $2}')

        amap -T 2 -B $ip $port |grep Banner |tee -a banners

done

if [ -s banners ]

then

	printf "**********************************************\nRemoving duplicates...\n**********************************************\n"
	cat banners |sort -u -o banners
	cat banners

else

	echo "No banners."
	rm banners

fi

#rm -rf temp_banners

}

function f_services() {

if [ "$(cat $1 | grep -oP '\w*/open/\w*'|cut -d/ -f 1 |sort -u)" != "" ]

then

	echo "Parsing \"$1\"..."

fi

for ip in $(cat $1 | grep -P '\w*/open/\w*' |awk '{print $2}');do

	if [ "$(cat $1 |grep $ip | grep -oP '\w*/open/\w*' |cut -d/ -f1)" != "" ]

        then

	        p_NoOpenPorts="false"  # Checking If there's at least one file with open ports.

        fi

	number_of_ips=$(cat $1 | grep -P '\w*/open/\w*' |awk '{print $2}' |wc -l)

        counter=1

	for port in $(cat $1 |grep $ip | grep -oP '\w*/open/\w*' |cut -d/ -f1);do


		PROTOCOL=$(cat $1 |grep $ip | grep -oP '\w*/open/\w*'|head -n $counter |tail -n 1|cut -d/ -f3)

		SERVICES=$(cat $1 |grep $ip | grep -o 'open/[^ ]*' |awk -F '//|//' '{print $2}' |head -n $counter |tail -n 1)

#		BANNER=$(cat $1 |grep $ip | grep -o $BANNER'/[^ ]*' |awk -F '//|//' '{print $2}' |tail -n $[$counter-$number_of_ips] |head -n 1)  //Maybe later...

		echo $ip$'\t'$port$'\t'$PROTOCOL$'\t'$SERVICES >> services

		counter=$[$counter+1]

	done



done

[ -s services ] && : || touch services # If there's n open ports, services file is never created, which causes problems.

if [ -s services ]

then

	sort -u services |sort -n -k2 > services_sorting # Remove any duplicates and sort the file by ports.

	cat services_sorting |awk '!a[$1,$2,$3]++' > services

	rm services_sorting

	if [ "$(echo "$2" | grep s)" == "" ] # Check if the service flag -s was used.

	then

		f_banners

	else

		flag_counter=$[$flag_counter+1]

	fi


	if [ $flag_counter -eq $3 ]

	then


		if [ "$p_NoOpenPorts" != "false" ]

		then

        		echo "No open ports."

		else

        		echo "*********************************************"
        		echo "             SERVICES             "
        		echo "*********************************************"
        		cat services

		fi

        fi


	if [ "$(echo "$2" | grep s)" == "" ] # Check if the service flag -s was used.

        then

		[ -f $(find -name "*.gnmap" |head -1) ] && f_services4report || echo "No nmap gnmap file."

	fi

else



	rm services
	printf "No open ports.\n**************************************************************\n"

fi

}

function f_nmap {

[ -d nmap_results ] && : || mkdir nmap_results

nmap -vv -F -T4 -sS -iL hosts -oA nmap_results/results_nmap

for file in $(find -name "*gnmap"); do

	f_services $file

done

exit # END OF SCRIPT

}

function f_expand {

echo "************************"
echo "    Hosts             "
echo "************************"

nmap -sL -n -iL scope |grep report |cut -d " " -f 5,6 |tr -d "()" |cut -d " " -f2 |sort -u |tee -a hosts

echo "************************"


f_nmap

}

function f_checkForScope {

[ -f scope ] && f_expand || echo "There is no hosts or scope file in this folder."

}

while getopts ":rs" opt; do

	case $opt in

		r)

			if [ "$(find -name "*gnmap")" != "" ]

			then

				f_services4report

			else

				echo "No \".gnmap\" file to parse."

			fi

                        if [ "$(echo "$@" | sed 's:r:\nr\n:g' |grep -v r)" == "" ]

                        then

                                exit

                        fi

                        ;;

		s)

                        if [ "$(find -name "*gnmap")" != "" ]

                        then 

	                        flag=$@
        	                number_of_files=$(find -name "*gnmap" | wc -l)

                	        for file in $(find -name "*gnmap"); do

                        	        f_services $file $flag $number_of_files

                        	done

                        	if [ "$(echo "$@" | sed 's:s:\ns\n:g' |grep -v s)" == "" ]

                        	then
                                	exit

                        	fi


                        else

                                echo "No \".gnmap\" file to parse."

                        fi


			if [ "$(echo "$@" | sed 's:s:\ns\n:g' |grep -v s)" == "" ]

			then
				exit

			fi

			;;

		\?)

			echo "Invalid option: -$OPTARG" >&2
			;;

	esac
done


if [ "$(echo $@)" != "" ] # If flags were used, do not run the whole script.

then

	exit

fi

if [ -f hosts ] # START

then

	echo "************************"
	echo "    Hosts             "
	echo "************************"
	cat hosts
	echo "************************"

	f_nmap

else

	f_checkForScope

fi
