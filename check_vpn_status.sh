#!/bin/bash


function Check_VPN_Status() {

interface=$(ifconfig |grep "$1" |awk {'print $1'})

if [ "$interface" != "$1" ]

then

	notify-send "VPN is disconnected."
	wall -n "VPN is disconnected."
fi

if [ $(wc /var/run/vpn_status.pid |awk {'print $1'}) -eq 1 ]

then

echo $BASHPID > /var/run/vpn_status.pid

fi

}

function f_kill {

process=$(cat /var/run/vpn_status.pid)
kill -9 $process
echo "VPN Status Check Terminated."
rm /var/run/vpn_status.pid

}

function f_main() {
echo 1 > /var/run/vpn_status.pid

if [ "$1" == "" ]

then 

	arg="tun0"
	while sleep 60; do Check_VPN_Status $arg; done &

else
	while sleep 60; do Check_VPN_Status $1; done &

fi

}

function f_start() {

[ -f /var/run/vpn_status.pid ] && true || touch /var/run/vpn_status.pid
if [ "$1" != "kill" ]
then 

        if [ $(wc /var/run/vpn_status.pid |awk {'print $1'}) -ne "0" ]

	then

	echo "Already running. Use 'kill' argument to terminate."
	exit

	else

	f_main $1

	fi

fi

if [ "$1" == "kill" ] 

then

	if [ $(wc /var/run/vpn_status.pid |awk {'print $1'}) -eq 0 ]

	then

	echo "Nothing to kill."

 	else

	f_kill

	fi

fi

}

function f_install {

echo -e "\nThis script uses \"notify-send\" to notify you when your VPN connection has dropped. You don't seem to have it installed."

read -p "Would you like to install it now? <Y/N> " prompt

if [[ $prompt == "y" || $prompt == "Y" || $prompt == "yes" || $prompt == "Yes" ]]

then

	apt-get install libnotify-bin
	read -p "notify-send is installed. Would you like to start the script now? <Y/N> " prompt2

	if [[ $prompt2 == "y" || $prompt2 == "Y" || $prompt2 == "yes" || $prompt2 == "Yes" ]]	

	then

		f_start $1

	else

		echo "Ok, bye."
		exit

	fi


else
	echo "Ok, bye."
	exit 
fi

}

[ -f /usr/bin/notify-send ] && f_start $1 || f_install $1 #START

